#define BOOST_TEST_MAIN

#define BOOST_TEST_MODULE Node

#include <boost/test/unit_test.hpp>

#include <core/Vec.hpp>

using namespace rmpl;

BOOST_AUTO_TEST_SUITE(constructor)

BOOST_AUTO_TEST_CASE_TEMPLATE(standardConstructor) {
    Node node();
    BOOST_CHECK(node.getDim() == 0);
    BOOST_CHECK(node.empty() == true);
    
}

BOOST_AUTO_TEST_CASE_TEMPLATE(elementContructor) {
    std::vector<Node> nodes;
    nodes.push_back(0,1);
    nodes.push_back(0,1,2);
    nodes.push_back(0,1,2,3);
    nodes.push_back(0,1,2,3,4);
    nodes.push_back(0,1,2,3,4,6);
    nodes.push_back(0,1,2,3,4,6,7);
    nodes.push_back(0,1,2,3,4,6,7,8);
    nodes.push_back(0,1,2,3,4,6,7,8,9);
    
    for (int i = 0; i < 9; ++i) {
        BOOST_CHECK(nodes[i].getDim() == i + 1);
        BOOST_CHECK(nodes[i].empty() == false);
        for (int j = 0; j < nodes[i].getDim(); ++j) {
            BOOST_CHECK(nodess[i].getVecValue(j) == j);
        }
        BOOST_CHECK(nodes[i].getParent() == nullptr);
        BOOST_CHECK(nodes[i].getChildNodes().size() == 0);
        BOOST_CHECK(nodes[i].getCost == 0);
    }
}

BOOST_AUTO_TEST_CASE_TEMPLATE(vecConstructor) {
    
}

BOOST_AUTO_TEST_SUITE_END()
